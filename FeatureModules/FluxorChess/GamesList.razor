@inherits FluxorComponent

@inject IDispatcher Dispatcher
@inject IState<ChessState> State
@inject IMatDialogService MatDialogService

<div>
    <button class="btn btn-primary float-end" @onclick="NewGame">New Game</button>
    <BlazmGrid Data="Games" PageSize="10" Sortable="true">
        <GridColumns>
            <GridColumn Field="@nameof(GameInfo.CreateBy)" Priority="0"></GridColumn>
            <GridColumn Field="@nameof(GameInfo.LastUpdateTimeStamp)" Priority="1">
                <Template>

                    @{
                        var target = context as GameInfo;
                        var localTime = target.LastUpdateTimeStamp.ToLocalTime();
                    }
                    @localTime
                </Template>
            </GridColumn>
            <GridColumn Class="alignRight">
                <Template>
                    @{
                        var target = context as GameInfo;
                    }
                    <button class="btn btn-outline-primary" @onclick="@( ()=>  JoinGame(target))">Join</button>
                </Template>
            </GridColumn>
        </GridColumns>
    </BlazmGrid>
</div>

@code{

    public List<GameInfo> Games { get; set; } = new();

    protected override void OnInitialized()
    {
        base.OnInitialized();
        Dispatcher.Dispatch(new StartHubEffectsAction());
        SubscribeToAction<GameListChangedReducerAction>(payload =>
        {
            Games = payload.Games;
        });
    }


    private async Task NewGame()
    {
        var result = await MatDialogService.PromptAsync("What is your name?");
        if (!string.IsNullOrWhiteSpace(result))
        {
            var chessPlayer = new ChessPlayer
                {
                    Name = result
                };
            Dispatcher.Dispatch(new NewGameEffectsAction(chessPlayer));
        }
    }

    /// <summary>
    /// Joins a game by prompting the user for their name and dispatching a JoinGameEffectsAction with
    /// the provided game info and player name.
    /// </summary>
    /// <param name="gameInfo">The game info of the game to join.</param>
    /// <returns>Task representing the asynchronous operation.</returns>

    private async Task JoinGame(GameInfo gameInfo)
    {
        var result = await MatDialogService.PromptAsync("What is your name?");

        if (!string.IsNullOrWhiteSpace(result))
        {
            var chessPlayer = new ChessPlayer
            {
                Name = result
            };
            var request = new JoinGameRequest(gameInfo, chessPlayer);
    // This line of code is dispatching a new JoinGameEffectsAction with the given request.
    // which will be handled by the JoinGameEffects class.
            Dispatcher.Dispatch(new JoinGameEffectsAction(request));
        }
    }

    private string ToLocalTime(DateTime timeStamp)
        {
            return timeStamp.ToLocalTime().ToString();
        }


    }